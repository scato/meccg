-- Load all cards
LOAD JSONL FROM `var/jsonl/${source}.jsonl` AS card
CREATE card;

-- Find cards with weird attribute values (non-array)
WITH [
    "set", "type", "alignment",
    "mp", "site_type", "region_type", "name",
    "mind", "gi", "di",
    "race", "class", "region",
    "prowess", "body", "opp_draws", "you_draw", "cp",
    "nearest_haven", "nearest_haven1", "nearest_haven2", "auto_attack"
] AS attr[]
SET patterns = ARRAY(LOAD TEXT FROM `var/regex/${attr}.txt` AS pattern RETURN "^" + pattern + "$")
MATCH {[attr]: value} AS card
WHERE value != null
WHERE NOT EXISTS (
    WITH value, patterns AS pattern[]
    WHERE value.match(pattern)
)
ORDER BY value
SET value = value
    .replace("+", "\\+")
    .replace(".", "\\.")
    .replace("(", "\\(")
    .replace(")", "\\)")
    .replace("[", "\\[")
    .replace("]", "\\]")
    .replace("*", "\\*")
SAVE TEXT value TO `${attr}.missing.txt`;

-- Find cards with weird attribute values (non-text array)
WITH ["skills", "adjacent_regions", "adjacent_sites", "special", "home_site"] AS attr[]
SET patterns = ARRAY(LOAD TEXT FROM `var/regex/${attr}.txt` AS pattern RETURN "^" + pattern + "$")
MATCH {[attr]: values} AS card
WITH card, attr, values AS value[], patterns
WHERE NOT EXISTS (
    WITH value, patterns AS pattern[]
    WHERE value.match(pattern)
)
ORDER BY value
SET value = value
    .replace("+", "\\+")
    .replace(".", "\\.")
    .replace("(", "\\(")
    .replace(")", "\\)")
    .replace("[", "\\[")
    .replace("]", "\\]")
    .replace("*", "\\*")
SAVE TEXT value TO `${attr}.missing.txt`;

-- Find cards with weird attribute values (text)
MATCH {type, class = null, text: values} AS card
SET category = CASE
    WHEN type == "Character" THEN "character"
    WHEN type == "Hazard" AND class == "Agent" THEN "hazard-agent"
    WHEN type == "Hazard" AND class.includes("Creature") THEN "hazard-creature"
    WHEN type == "Hazard" THEN "hazard-event"
    WHEN type == "Region" THEN "region"
    WHEN type == "Resource" AND class == "Ally" THEN "resource-ally"
    WHEN type == "Resource" AND class.includes("event") THEN "resource-event"
    WHEN type == "Resource" AND class == "Faction" THEN "resource-faction"
    WHEN type == "Resource" AND class.includes("Item") THEN "resource-item"
    WHEN type == "Site" THEN "site"
END
SET patterns = ARRAY(LOAD TEXT FROM `var/regex/text.${category}.txt` AS pattern RETURN "^" + pattern + "$")
WITH card, values AS value[], patterns, category
WHERE NOT EXISTS (
    WITH value, patterns AS pattern[]
    WHERE value.match(pattern)
)
ORDER BY value
SET value = value
    .replace("+", "\\+")
    .replace(".", "\\.")
    .replace("(", "\\(")
    .replace(")", "\\)")
    .replace("[", "\\[")
    .replace("]", "\\]")
    .replace("*", "\\*")
SAVE TEXT value TO `${attr}.${category}.missing.txt`;
